name: Rustup

description: Setup Rust with caching

inputs:
  # See https://rust-lang.github.io/rustup/concepts/components.html
  components:
    required: false
    type: string
    description: space separated Rust components, e.g. `clippy rustfmt rust-docs`

  tools:
    required: false
    type: string
    description: comma separated Cargo tools

runs:
  using: composite
  steps:
    - name: Print Inputs
      shell: bash
      run: |
        echo 'components: ${{ inputs.components }}'
        echo 'tools: ${{ inputs.tools }}'

    - name: Change to minimal profile
      shell: bash
      run: |
        sed -i ${{ (runner.os == 'macOS' && '""') || '' }} -e 's/profile = "default"/profile = "minimal"/g' rust-toolchain.toml
        cat rust-toolchain.toml

    - name: Set Minimal Profile
      shell: bash
      run: rustup set profile minimal

    - name: Add Components
      shell: bash
      if: ${{ inputs.components }}
      run: rustup component add ${{ inputs.components }}

    - name: Install
      shell: bash
      run: |
        rustup show
        git restore . # restore rust-toolchain.toml change

    - name: Install Tools
      uses: taiki-e/install-action@v2
      if: ${{ inputs.tools }}
      with:
        tool: ${{ inputs.tools }}
