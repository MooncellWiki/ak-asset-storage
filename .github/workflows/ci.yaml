name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  RUST_TOOLCHAIN: stable
  TOOLCHAIN_PROFILE: minimal
  SQLX_OFFLINE: true

jobs:
  rustfmt:
    name: Check Rust Style
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

  clippy:
    name: Run Clippy
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Setup Node
        uses: ./.github/actions/node
      - name: Build frontend
        shell: bash
        run: pnpm run build
      - name: Run cargo clippy
        shell: bash
        run: cargo clippy --all-features -- -D warnings

  eslint:
    name: Check frontend style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: ./.github/actions/node
      - name: Run eslint
        shell: bash
        run: pnpm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Setup Node
        uses: ./.github/actions/node
      - name: Build frontend
        shell: bash
        run: pnpm run build
      - name: Run cargo test
        shell: bash
        run: cargo test --all-features -- --nocapture
